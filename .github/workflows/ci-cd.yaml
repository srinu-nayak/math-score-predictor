name: CI/CD Math Score Predictor

on:
  push:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Cache pip packages
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      # Run tests
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python -m pytest tests/

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log into DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}

      # Build Docker image with Git SHA tag and latest
      - name: Build Docker image
        run: |
          docker build \
            --cache-from /tmp/.docker-cache \
            -t srinu0930/math-score-predictor:${{ github.sha }} \
            -t srinu0930/math-score-predictor:latest .

      # Push Docker image with SHA tag
      - name: Push Docker image (SHA tag)
        run: docker push srinu0930/math-score-predictor:${{ github.sha }}

      # Push Docker image latest tag
      - name: Push Docker image (latest tag)
        run: docker push srinu0930/math-score-predictor:latest

      # Deploy to AWS EC2 via SSH
      - name: Deploy on AWS EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          timeout: 10m
          script: |
            docker pull srinu0930/math-score-predictor:latest
            docker stop ml-app || true
            docker rm ml-app || true
            docker run -d -p 5000:5000 --name ml-app --restart unless-stopped srinu0930/math-score-predictor:latest
